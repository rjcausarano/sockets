// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: comms/entity.proto
// Protobuf C++ Version: 5.29.3

#include "comms/entity.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr EntityRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntityRequest::EntityRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityRequestDefaultTypeInternal() {}
  union {
    EntityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityRequestDefaultTypeInternal _EntityRequest_default_instance_;

inline constexpr Entity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entities_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::Entity_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Entity::Entity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityDefaultTypeInternal() {}
  union {
    Entity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityDefaultTypeInternal _Entity_default_instance_;
PROTOBUF_CONSTINIT const uint32_t Entity_Type_internal_data_[] = {
    131072u, 0u, };
bool Entity_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
static ::google::protobuf::internal::ExplicitlyConstructed<std::string>
    Entity_Type_strings[2] = {};

static const char Entity_Type_names[] = {
    "DIRECTORY"
    "FILE"
};

static const ::google::protobuf::internal::EnumEntry Entity_Type_entries[] =
    {
        {{&Entity_Type_names[0], 9}, 1},
        {{&Entity_Type_names[9], 4}, 0},
};

static const int Entity_Type_entries_by_number[] = {
    1,  // 0 -> FILE
    0,  // 1 -> DIRECTORY
};

const std::string& Entity_Type_Name(Entity_Type value) {
  static const bool kDummy =
      ::google::protobuf::internal::InitializeEnumStrings(
          Entity_Type_entries, Entity_Type_entries_by_number,
          2, Entity_Type_strings);
  (void)kDummy;

  int idx = ::google::protobuf::internal::LookUpEnumName(
      Entity_Type_entries, Entity_Type_entries_by_number, 2,
      value);
  return idx == -1 ? ::google::protobuf::internal::GetEmptyString()
                   : Entity_Type_strings[idx].get();
}

bool Entity_Type_Parse(absl::string_view name, Entity_Type* value) {
  int int_value;
  bool success = ::google::protobuf::internal::LookUpEnumValue(
      Entity_Type_entries, 2, name, &int_value);
  if (success) {
    *value = static_cast<Entity_Type>(int_value);
  }
  return success;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Entity_Type Entity::FILE;
constexpr Entity_Type Entity::DIRECTORY;
constexpr Entity_Type Entity::Type_MIN;
constexpr Entity_Type Entity::Type_MAX;
constexpr int Entity::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class EntityRequest::_Internal {
 public:
};

EntityRequest::EntityRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EntityRequest)
}
inline PROTOBUF_NDEBUG_INLINE EntityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::EntityRequest& from_msg)
      : path_(arena, from.path_),
        _cached_size_{0} {}

EntityRequest::EntityRequest(
    ::google::protobuf::Arena* arena,
    const EntityRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:EntityRequest)
}
inline PROTOBUF_NDEBUG_INLINE EntityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        _cached_size_{0} {}

inline void EntityRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EntityRequest::~EntityRequest() {
  // @@protoc_insertion_point(destructor:EntityRequest)
  SharedDtor(*this);
}
inline void EntityRequest::SharedDtor(MessageLite& self) {
  EntityRequest& this_ = static_cast<EntityRequest&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EntityRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EntityRequest(arena);
}
constexpr auto EntityRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntityRequest),
                                            alignof(EntityRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<14> EntityRequest::_class_data_ = {
    {
        &_EntityRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EntityRequest::MergeImpl,
        ::google::protobuf::MessageLite::GetNewImpl<EntityRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EntityRequest::SharedDtor,
        ::google::protobuf::MessageLite::GetClearImpl<EntityRequest>(), &EntityRequest::ByteSizeLong,
            &EntityRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EntityRequest, _impl_._cached_size_),
        true,
    },
    "EntityRequest",
};
const ::google::protobuf::internal::ClassData* EntityRequest::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 26, 2> EntityRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EntityRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EntityRequest, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(EntityRequest, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\4\0\0\0\0\0\0"
    "EntityRequest"
    "path"
  }},
};

PROTOBUF_NOINLINE void EntityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EntityRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EntityRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EntityRequest& this_ = static_cast<const EntityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EntityRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EntityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:EntityRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string path = 1;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EntityRequest.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:EntityRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EntityRequest::ByteSizeLong(const MessageLite& base) {
          const EntityRequest& this_ = static_cast<const EntityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EntityRequest::ByteSizeLong() const {
          const EntityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:EntityRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string path = 1;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void EntityRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityRequest*>(&to_msg);
  auto& from = static_cast<const EntityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EntityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void EntityRequest::CopyFrom(const EntityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityRequest::InternalSwap(EntityRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

// ===================================================================

class Entity::_Internal {
 public:
};

Entity::Entity(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Entity)
}
inline PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Entity& from_msg)
      : entities_{visibility, arena, from.entities_},
        name_(arena, from.name_),
        _cached_size_{0} {}

Entity::Entity(
    ::google::protobuf::Arena* arena,
    const Entity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::MessageLite(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::MessageLite(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Entity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:Entity)
}
inline PROTOBUF_NDEBUG_INLINE Entity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entities_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void Entity::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Entity::~Entity() {
  // @@protoc_insertion_point(destructor:Entity)
  SharedDtor(*this);
}
inline void Entity::SharedDtor(MessageLite& self) {
  Entity& this_ = static_cast<Entity&>(self);
  this_._internal_metadata_.Delete<std::string>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Entity::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Entity(arena);
}
constexpr auto Entity::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Entity, _impl_.entities_) +
          decltype(Entity::_impl_.entities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::MessageLite::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Entity), alignof(Entity), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Entity::PlacementNew_,
                                 sizeof(Entity),
                                 alignof(Entity));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataLite<7> Entity::_class_data_ = {
    {
        &_Entity_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Entity::MergeImpl,
        ::google::protobuf::MessageLite::GetNewImpl<Entity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Entity::SharedDtor,
        ::google::protobuf::MessageLite::GetClearImpl<Entity>(), &Entity::ByteSizeLong,
            &Entity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Entity, _impl_._cached_size_),
        true,
    },
    "Entity",
};
const ::google::protobuf::internal::ClassData* Entity::GetClassData() const {
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 19, 2> Entity::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Entity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .Entity.Type type = 1;
    {::_pbi::TcParser::FastV32S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.name_)}},
    // repeated .Entity entities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Entity, _impl_.entities_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Entity.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Entity entities = 3;
    {PROTOBUF_FIELD_OFFSET(Entity, _impl_.entities_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Entity>()},
  }}, {{
    "\6\0\4\0\0\0\0\0"
    "Entity"
    "name"
  }},
};

PROTOBUF_NOINLINE void Entity::Clear() {
// @@protoc_insertion_point(message_clear_start:Entity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entities_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<std::string>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Entity::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Entity::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Entity)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .Entity.Type type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Entity.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .Entity entities = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entities_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entities().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target = stream->WriteRaw(
                this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
                static_cast<int>(this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Entity)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Entity::ByteSizeLong(const MessageLite& base) {
          const Entity& this_ = static_cast<const Entity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Entity::ByteSizeLong() const {
          const Entity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Entity)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Entity entities = 3;
            {
              total_size += 1UL * this_._internal_entities_size();
              for (const auto& msg : this_._internal_entities()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // .Entity.Type type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            total_size += this_._internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
          }
          this_._impl_._cached_size_.Set(::_pbi::ToCachedSize(total_size));
          return total_size;
        }

void Entity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Entity*>(&to_msg);
  auto& from = static_cast<const Entity&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Entity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entities()->MergeFrom(
      from._internal_entities());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void Entity::CopyFrom(const Entity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Entity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Entity::InternalSwap(Entity* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entities_.InternalSwap(&other->_impl_.entities_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
